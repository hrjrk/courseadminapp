{"ast":null,"code":"import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors/\";\nexport function getAuthors() {\n  return fetch(baseUrl).then(handleResponse).catch(handleError);\n}\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\",\n    // POST for create, PUT to update when id already exists.\n    headers: {\n      \"content-type\": \"application/json\"\n    },\n    body: JSON.stringify(author)\n  }).then(handleResponse).catch(handleError);\n}\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, {\n    method: \"DELETE\"\n  }).then(handleResponse).catch(handleError);\n}","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/api/authorApi.js"],"names":["handleResponse","handleError","baseUrl","process","env","REACT_APP_API_URL","getAuthors","fetch","then","catch","saveAuthor","author","id","method","headers","body","JSON","stringify","deleteAuthor","authorId"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA4C,YAA5C;AACA,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,iBAAZ,GAAgC,WAAhD;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAOC,KAAK,CAACL,OAAD,CAAL,CACJM,IADI,CACCR,cADD,EAEJS,KAFI,CAEER,WAFF,CAAP;AAGD;AAED,OAAO,SAASS,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAOJ,KAAK,CAACL,OAAO,IAAIS,MAAM,CAACC,EAAP,IAAa,EAAjB,CAAR,EAA8B;AACxCC,IAAAA,MAAM,EAAEF,MAAM,CAACC,EAAP,GAAY,KAAZ,GAAoB,MADY;AACJ;AACpCE,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeN,MAAf;AAHkC,GAA9B,CAAL,CAKJH,IALI,CAKCR,cALD,EAMJS,KANI,CAMER,WANF,CAAP;AAOD;AAED,OAAO,SAASiB,YAAT,CAAsBC,QAAtB,EAAgC;AACrC,SAAOZ,KAAK,CAACL,OAAO,GAAGiB,QAAX,EAAqB;AAAEN,IAAAA,MAAM,EAAE;AAAV,GAArB,CAAL,CACJL,IADI,CACCR,cADD,EAEJS,KAFI,CAEER,WAFF,CAAP;AAGD","sourcesContent":["import { handleResponse, handleError } from \"./apiUtils\";\nconst baseUrl = process.env.REACT_APP_API_URL + \"/authors/\";\n\nexport function getAuthors() {\n  return fetch(baseUrl)\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function saveAuthor(author) {\n  return fetch(baseUrl + (author.id || \"\"), {\n    method: author.id ? \"PUT\" : \"POST\", // POST for create, PUT to update when id already exists.\n    headers: { \"content-type\": \"application/json\" },\n    body: JSON.stringify(author)\n  })\n    .then(handleResponse)\n    .catch(handleError);\n}\n\nexport function deleteAuthor(authorId) {\n  return fetch(baseUrl + authorId, { method: \"DELETE\" })\n    .then(handleResponse)\n    .catch(handleError);\n}\n"]},"metadata":{},"sourceType":"module"}