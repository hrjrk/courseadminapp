{"ast":null,"code":"import _slicedToArray from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/CoursesPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport courseStore from '../stores/courseStore';\nimport authorStore from '../stores/authorStore';\nimport CourseList from './CourseList';\nimport { Link } from 'react-router-dom';\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\nimport { loadAuthors } from \"../actions/authorActions\";\n\nfunction CoursesPage() {\n  const _useState = useState(courseStore.getCourses()),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  const _useState3 = useState(authorStore.getAuthors()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        authors = _useState4[0],\n        setAuthors = _useState4[1];\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n\n    if (authorStore.getAuthors().length === 0) {\n      loadAuthors();\n    }\n\n    if (courseStore.getCourses().length === 0) {\n      loadCourses();\n    }\n\n    return () => courseStore.removeChangeListener(onChange);\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n    setAuthors(authorStore.getAuthors());\n  }\n\n  function getAuthorNameById(id) {\n    debugger;\n    return authors.find(author => author.id === id);\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Courses\"), React.createElement(Link, {\n    className: \"btn btn-primary\",\n    to: \"/course\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add Course\"), React.createElement(CourseList, {\n    courses: courses,\n    deleteCourse: deleteCourse,\n    getAuthorNameById: getAuthorNameById,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default CoursesPage;\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/CoursesPage.js"],"names":["React","useState","useEffect","courseStore","authorStore","CourseList","Link","loadCourses","deleteCourse","loadAuthors","CoursesPage","getCourses","courses","setCourses","getAuthors","authors","setAuthors","addChangeListener","onChange","length","removeChangeListener","getAuthorNameById","id","find","author"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;AACA,SAASC,WAAT,QAA4B,0BAA5B;;AAEA,SAASC,WAAT,GAAuB;AAAA,oBAEWT,QAAQ,CAACE,WAAW,CAACQ,UAAZ,EAAD,CAFnB;AAAA;AAAA,QAEZC,OAFY;AAAA,QAEHC,UAFG;;AAAA,qBAGWZ,QAAQ,CAACG,WAAW,CAACU,UAAZ,EAAD,CAHnB;AAAA;AAAA,QAGZC,OAHY;AAAA,QAGHC,UAHG;;AAKnBd,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACc,iBAAZ,CAA8BC,QAA9B;;AACA,QAAGd,WAAW,CAACU,UAAZ,GAAyBK,MAAzB,KAAoC,CAAvC,EAAyC;AACrCV,MAAAA,WAAW;AACd;;AACD,QAAGN,WAAW,CAACQ,UAAZ,GAAyBQ,MAAzB,KAAoC,CAAvC,EAA0C;AACtCZ,MAAAA,WAAW;AACd;;AACD,WAAO,MAAMJ,WAAW,CAACiB,oBAAZ,CAAiCF,QAAjC,CAAb;AACH,GATQ,EASN,EATM,CAAT;;AAWA,WAASA,QAAT,GAAoB;AAChBL,IAAAA,UAAU,CAACV,WAAW,CAACQ,UAAZ,EAAD,CAAV;AACAK,IAAAA,UAAU,CAACZ,WAAW,CAACU,UAAZ,EAAD,CAAV;AACH;;AAED,WAASO,iBAAT,CAA2BC,EAA3B,EACA;AACI;AACA,WAAOP,OAAO,CAACQ,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAACF,EAAP,KAAcA,EAArC,CAAP;AACH;;AAEG,SAAQ,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,EAAE,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAKA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEV,OAArB;AAA8B,IAAA,YAAY,EAAEJ,YAA5C;AAA0D,IAAA,iBAAiB,EAAEa,iBAA7E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAAR;AASP;;AAED,eAAeX,WAAf;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport courseStore from '../stores/courseStore';\nimport authorStore from '../stores/authorStore';\nimport CourseList from './CourseList';\nimport { Link } from 'react-router-dom';\nimport { loadCourses, deleteCourse } from \"../actions/courseActions\";\nimport { loadAuthors } from \"../actions/authorActions\";\n\nfunction CoursesPage() {\n\n    const [courses, setCourses] = useState(courseStore.getCourses());\n    const [authors, setAuthors] = useState(authorStore.getAuthors());\n\n    useEffect(() => {\n        courseStore.addChangeListener(onChange);\n        if(authorStore.getAuthors().length === 0){\n            loadAuthors();\n        }\n        if(courseStore.getCourses().length === 0) {\n            loadCourses();\n        }\n        return () => courseStore.removeChangeListener(onChange);\n    }, []);\n\n    function onChange() {\n        setCourses(courseStore.getCourses());\n        setAuthors(authorStore.getAuthors());\n    }\n\n    function getAuthorNameById(id)\n    {\n        debugger;\n        return authors.find(author => author.id === id);\n    }\n\n        return( <>\n                <h2>Courses</h2>\n                <Link className=\"btn btn-primary\" to=\"/course\">\n                    Add Course\n                </Link>\n                <CourseList courses={courses} deleteCourse={deleteCourse} getAuthorNameById={getAuthorNameById}/>\n                </>\n        );\n\n}\n\nexport default CoursesPage;\n\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/"]},"metadata":{},"sourceType":"module"}