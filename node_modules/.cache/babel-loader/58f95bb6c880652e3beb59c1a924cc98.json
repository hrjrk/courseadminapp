{"ast":null,"code":"import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from './actionTypes';\nexport function saveCourse(course) {\n  return courseApi.saveCourse(course).then(savedCourse => {\n    //hey dispatcher go tell all stores thta course has been created.\n    dispatcher.dispatch({\n      actionType: course.id ? actionTypes.UPDATE_COURSE : actionTypes.CREATE_COURSE,\n      course: savedCourse\n    });\n  });\n}\nexport function loadCourses() {\n  return courseApi.getCourses().then(courses => {\n    //hey dispatcher go tell all stores thta course has been created.\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_COURSES,\n      courses: courses // shorthand for this is   -->  courses\n\n    });\n  });\n}\nexport function deleteCourse(courseId) {\n  return courseApi.deleteCourse(courseId).then();\n}","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/actions/courseActions.js"],"names":["dispatcher","courseApi","actionTypes","saveCourse","course","then","savedCourse","dispatch","actionType","id","UPDATE_COURSE","CREATE_COURSE","loadCourses","getCourses","courses","LOAD_COURSES","deleteCourse","courseId"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,SAASC,UAAT,CAAoBC,MAApB,EAA4B;AAC/B,SAAOH,SAAS,CAACE,UAAV,CAAqBC,MAArB,EAA6BC,IAA7B,CAAkCC,WAAW,IAAI;AACpD;AACHN,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,UAAU,EAAGJ,MAAM,CAACK,EAAP,GACPP,WAAW,CAACQ,aADL,GAEPR,WAAW,CAACS,aAHF;AAIhBP,MAAAA,MAAM,EAAEE;AAJQ,KAApB;AAMA,GARM,CAAP;AASH;AAED,OAAO,SAASM,WAAT,GAAuB;AAC1B,SAAOX,SAAS,CAACY,UAAV,GAAuBR,IAAvB,CAA4BS,OAAO,IAAI;AAC1C;AACAd,IAAAA,UAAU,CAACO,QAAX,CAAoB;AAChBC,MAAAA,UAAU,EAAGN,WAAW,CAACa,YADT;AAEhBD,MAAAA,OAAO,EAAEA,OAFO,CAEC;;AAFD,KAApB;AAIH,GANM,CAAP;AAOH;AAED,OAAO,SAASE,YAAT,CAAsBC,QAAtB,EAAgC;AACnC,SAAOhB,SAAS,CAACe,YAAV,CAAuBC,QAAvB,EAAiCZ,IAAjC,EAAP;AACH","sourcesContent":["import dispatcher from \"../appDispatcher\";\nimport * as courseApi from \"../api/courseApi\";\nimport actionTypes from './actionTypes';\n\nexport function saveCourse(course) {\n    return courseApi.saveCourse(course).then(savedCourse => {\n        //hey dispatcher go tell all stores thta course has been created.\n     dispatcher.dispatch({\n         actionType : course.id\n             ? actionTypes.UPDATE_COURSE\n             : actionTypes.CREATE_COURSE,\n         course: savedCourse\n     });\n    });\n}\n\nexport function loadCourses() {\n    return courseApi.getCourses().then(courses => {\n        //hey dispatcher go tell all stores thta course has been created.\n        dispatcher.dispatch({\n            actionType : actionTypes.LOAD_COURSES,\n            courses: courses // shorthand for this is   -->  courses\n        });\n    });\n}\n\nexport function deleteCourse(courseId) {\n    return courseApi.deleteCourse(courseId).then()\n}"]},"metadata":{},"sourceType":"module"}