{"ast":null,"code":"import { EventEmitter } from 'events';\nimport Dipatcher from '../appDispatcher';\nimport actionTypes from '../actions/actionTypes';\nconst CHANGE_EVENT = \"change\"; // noy global as only 1 thing is exported below\n\nconst _courses = [];\n\nclass CourseStore extends EventEmitter {\n  addChangeListener(callback) {\n    this.on(CHANGE_EVENT, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(CHANGE_EVENT, callback);\n  }\n\n  emitChange() {\n    this.emit(CHANGE_EVENT);\n  }\n\n  getCourses() {\n    return _courses;\n  }\n\n  getCourseBySlug(slug) {\n    return _courses.find(course => course.slug === slug);\n  }\n\n}\n\nconst store = new CourseStore();\nDispatcher.register(action => {\n  switch (action.actionType) {\n    case actionTypes.CREATE_COURSE:\n      _courses.push(action.course);\n\n      store.emitChange();\n      break;\n\n    default: //nothing to do here\n\n  }\n});\nexport default store;","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/stores/courseStore.js"],"names":["EventEmitter","Dipatcher","actionTypes","CHANGE_EVENT","_courses","CourseStore","addChangeListener","callback","on","removeChangeListener","removeListener","emitChange","emit","getCourses","getCourseBySlug","slug","find","course","store","Dispatcher","register","action","actionType","CREATE_COURSE","push"],"mappings":"AAAA,SAAQA,YAAR,QAA2B,QAA3B;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AAEA,MAAMC,YAAY,GAAG,QAArB,C,CAA+B;;AAC/B,MAAMC,QAAQ,GAAG,EAAjB;;AAEA,MAAMC,WAAN,SAA0BL,YAA1B,CAAsC;AAErCM,EAAAA,iBAAiB,CAACC,QAAD,EAAU;AACvB,SAAKC,EAAL,CAAQL,YAAR,EAAsBI,QAAtB;AACH;;AAEDE,EAAAA,oBAAoB,CAACF,QAAD,EAAU;AAC1B,SAAKG,cAAL,CAAoBP,YAApB,EAAkCI,QAAlC;AACH;;AAEDI,EAAAA,UAAU,GAAG;AACT,SAAKC,IAAL,CAAUT,YAAV;AACH;;AAEDU,EAAAA,UAAU,GAAG;AACT,WAAOT,QAAP;AACH;;AAEDU,EAAAA,eAAe,CAACC,IAAD,EAAO;AAClB,WAAOX,QAAQ,CAACY,IAAT,CAAcC,MAAM,IAAIA,MAAM,CAACF,IAAP,KAAgBA,IAAxC,CAAP;AACH;;AApBoC;;AAuBtC,MAAMG,KAAK,GAAG,IAAIb,WAAJ,EAAd;AACAc,UAAU,CAACC,QAAX,CAAoBC,MAAM,IAAI;AAC1B,UAAQA,MAAM,CAACC,UAAf;AACI,SAAKpB,WAAW,CAACqB,aAAjB;AACKnB,MAAAA,QAAQ,CAACoB,IAAT,CAAcH,MAAM,CAACJ,MAArB;;AACAC,MAAAA,KAAK,CAACP,UAAN;AACD;;AAEJ,YANJ,CAOQ;;AAPR;AASH,CAVD;AAWA,eAAeO,KAAf","sourcesContent":["import {EventEmitter} from 'events';\nimport Dipatcher from '../appDispatcher';\nimport actionTypes from '../actions/actionTypes';\n\nconst CHANGE_EVENT = \"change\"; // noy global as only 1 thing is exported below\nconst _courses = [];\n\nclass CourseStore extends EventEmitter{\n\n addChangeListener(callback){\n     this.on(CHANGE_EVENT, callback);\n }\n\n removeChangeListener(callback){\n     this.removeListener(CHANGE_EVENT, callback);\n }\n\n emitChange() {\n     this.emit(CHANGE_EVENT);\n }\n\n getCourses() {\n     return _courses;\n }\n\n getCourseBySlug(slug) {\n     return _courses.find(course => course.slug === slug)\n }\n}\n\nconst store = new CourseStore();\nDispatcher.register(action => {\n    switch (action.actionType) {\n        case actionTypes.CREATE_COURSE:\n             _courses.push(action.course);\n             store.emitChange();\n            break;\n\n        default:\n            //nothing to do here\n    }\n})\nexport default store;"]},"metadata":{},"sourceType":"module"}