{"ast":null,"code":"import _objectSpread from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/ManageAuthorPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport AuthorForm from './AuthorForm';\nimport authorStore from '../stores/courseStore';\nimport { toast } from 'react-toastify';\nimport * as authorActions from '../actions/authorActions';\nimport { getAuthors } from \"../api/authorApi\";\n\nconst ManageAuthorPage = props => {\n  const _useState = useState(authorStore.getAuthors()),\n        _useState2 = _slicedToArray(_useState, 2),\n        authors = _useState2[0],\n        setAuthors = _useState2[1];\n\n  const _useState3 = useState({}),\n        _useState4 = _slicedToArray(_useState3, 2),\n        errors = _useState4[0],\n        setErrors = _useState4[1];\n\n  const _useState5 = useState({\n    id: null,\n    slug: \"\",\n    name: \"\"\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        author = _useState6[0],\n        setAuthor = _useState6[1];\n\n  useEffect(() => {\n    authorStore.addChangeListener(onChange);\n    const slug = props.match.params.slug; // from path '/authors/:slug'\n\n    if (authors.length === 0) {\n      authorActions.loadAuthors();\n    } else if (slug) {\n      setAuthors(authorStore.getAuthorBySlug(slug));\n    }\n\n    return () => authorStore.removeChangeListener(onChange);\n  }, [authors.length, props.match.params.slug]);\n\n  function onChange() {\n    setAuthors(authorStore.getAuthors());\n  }\n\n  function handleChange(event) {\n    setAuthor(_objectSpread({}, author, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function isFormValid() {\n    const _errors = {};\n    if (!author.name) _errors.name = \"Name is required\";\n    if (!author.id) _errors.id = \"id is required\";\n    setErrors(_errors); //Form is valid if the _errors object has no properties.\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    if (!isFormValid()) return;\n    authorActions.saveAuthor(author).then(() => {\n      props.history.push(\"/authors\");\n      toast.success('Author Saved.');\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Manage Author\"), React.createElement(AuthorForm, {\n    errors: errors,\n    author: author,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }));\n};\n\nexport default ManageAuthorPage;","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/ManageAuthorPage.js"],"names":["React","useState","useEffect","AuthorForm","authorStore","toast","authorActions","getAuthors","ManageAuthorPage","props","authors","setAuthors","errors","setErrors","id","slug","name","author","setAuthor","addChangeListener","onChange","match","params","length","loadAuthors","getAuthorBySlug","removeChangeListener","handleChange","event","target","value","isFormValid","_errors","Object","keys","handleSubmit","preventDefault","saveAuthor","then","history","push","success"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport AuthorForm from './AuthorForm';\nimport authorStore from '../stores/courseStore';\nimport { toast } from 'react-toastify';\nimport * as authorActions from '../actions/authorActions';\nimport {getAuthors} from \"../api/authorApi\";\n\nconst ManageAuthorPage = props => {\n\n    const [authors, setAuthors] = useState(authorStore.getAuthors());\n    const [errors, setErrors] = useState({});\n    const [author, setAuthor] = useState({\n        id: null,\n        slug: \"\",\n        name: \"\"\n    });\n\n    useEffect( () => {\n        authorStore.addChangeListener(onChange);\n        const slug = props.match.params.slug; // from path '/authors/:slug'\n        if(authors.length === 0){\n            authorActions.loadAuthors();\n        }\n        else if(slug){\n            setAuthors(authorStore.getAuthorBySlug(slug));\n        }\n        return () => authorStore.removeChangeListener(onChange);\n    },[authors.length, props.match.params.slug]);\n\n    function onChange() {\n        setAuthors(authorStore.getAuthors());\n    }\n\n    function handleChange(event) {\n        setAuthor({...author, [event.target.name] : event.target.value});\n    }\n\n    function isFormValid() {\n        const _errors = {};\n\n        if(!author.name) _errors.name = \"Name is required\";\n        if(!author.id) _errors.id = \"id is required\";\n\n        setErrors(_errors);\n\n        //Form is valid if the _errors object has no properties.\n        return Object.keys(_errors).length === 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if(!isFormValid()) return;\n        authorActions.saveAuthor(author).then(\n            () => {\n                props.history.push(\"/authors\");\n                toast.success('Author Saved.');\n            });\n    }\n\n    return(\n        <>\n            <h2>Manage Author</h2>\n            <AuthorForm\n                errors={errors}\n                author={author}\n                onChange={handleChange}\n                onSubmit={handleSubmit}\n            />\n        </>\n    );\n};\n\nexport default ManageAuthorPage;"]},"metadata":{},"sourceType":"module"}