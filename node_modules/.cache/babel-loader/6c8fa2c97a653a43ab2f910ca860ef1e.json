{"ast":null,"code":"import _slicedToArray from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/CoursesPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport courseStore from '../stores/courseStore';\nimport CourseList from './CourseList';\nimport { Link } from 'react-router-dom';\nimport { loadCourses } from \"../actions/courseActions\";\nimport { deleteCourse } from \"../actions/courseActions\";\nimport * as authorApi from '../api/authorApi';\n\nfunction CoursesPage() {\n  const _useState = useState(courseStore.getCourses()),\n        _useState2 = _slicedToArray(_useState, 2),\n        courses = _useState2[0],\n        setCourses = _useState2[1];\n\n  useEffect(() => {\n    courseStore.addChangeListener(onChange);\n    if (courseStore.getCourses().length === 0) loadCourses();\n    return () => courseStore.removeChangeListener(onChange);\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n  }\n\n  function getAuthorName(id) {\n    debugger;\n    const x = authorApi.getAuthors().then(authors => authors\n    /*authors.find((author) => author.id === id)*/\n    );\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Courses\"), React.createElement(Link, {\n    className: \"btn btn-primary\",\n    to: \"/course\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Add Course\"), React.createElement(CourseList, {\n    courses: courses,\n    deleteCourse: deleteCourse,\n    getAuthorName: getAuthorName,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }));\n}\n\nexport default CoursesPage;\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/CoursesPage.js"],"names":["React","useState","useEffect","courseStore","CourseList","Link","loadCourses","deleteCourse","authorApi","CoursesPage","getCourses","courses","setCourses","addChangeListener","onChange","length","removeChangeListener","getAuthorName","id","x","getAuthors","then","authors"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,QAA4B,0BAA5B;AACA,SAASC,YAAT,QAA4B,0BAA5B;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;;AAEA,SAASC,WAAT,GAAuB;AAAA,oBAEWR,QAAQ,CAACE,WAAW,CAACO,UAAZ,EAAD,CAFnB;AAAA;AAAA,QAEZC,OAFY;AAAA,QAEHC,UAFG;;AAInBV,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACU,iBAAZ,CAA8BC,QAA9B;AACA,QAAGX,WAAW,CAACO,UAAZ,GAAyBK,MAAzB,KAAoC,CAAvC,EAA0CT,WAAW;AACrD,WAAO,MAAMH,WAAW,CAACa,oBAAZ,CAAiCF,QAAjC,CAAb;AACH,GAJQ,EAIN,EAJM,CAAT;;AAMA,WAASA,QAAT,GAAoB;AAChBF,IAAAA,UAAU,CAACT,WAAW,CAACO,UAAZ,EAAD,CAAV;AACH;;AAED,WAASO,aAAT,CAAuBC,EAAvB,EAA2B;AACvB;AACA,UAAMC,CAAC,GAAGX,SAAS,CAACY,UAAV,GAAuBC,IAAvB,CACLC,OAAD,IAAcA;AAAO;AADf,KAAV;AAEH;;AAEG,SAAQ,0CACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,EAEA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,EAAE,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,EAKA,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEX,OAArB;AAA8B,IAAA,YAAY,EAAEJ,YAA5C;AAA0D,IAAA,aAAa,EAAEU,aAAzE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALA,CAAR;AASP;;AAED,eAAeR,WAAf;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport courseStore from '../stores/courseStore';\nimport CourseList from './CourseList';\nimport { Link } from 'react-router-dom';\nimport { loadCourses } from \"../actions/courseActions\";\nimport { deleteCourse} from \"../actions/courseActions\";\nimport * as authorApi from '../api/authorApi';\n\nfunction CoursesPage() {\n\n    const [courses, setCourses] = useState(courseStore.getCourses());\n\n    useEffect(() => {\n        courseStore.addChangeListener(onChange);\n        if(courseStore.getCourses().length === 0) loadCourses();\n        return () => courseStore.removeChangeListener(onChange);\n    }, []);\n\n    function onChange() {\n        setCourses(courseStore.getCourses());\n    }\n\n    function getAuthorName(id) {\n        debugger;\n        const x = authorApi.getAuthors().then(\n            (authors) =>  authors/*authors.find((author) => author.id === id)*/)\n    }\n\n        return( <>\n                <h2>Courses</h2>\n                <Link className=\"btn btn-primary\" to=\"/course\">\n                    Add Course\n                </Link>\n                <CourseList courses={courses} deleteCourse={deleteCourse} getAuthorName={getAuthorName}/>\n                </>\n        );\n\n}\n\nexport default CoursesPage;\n\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/"]},"metadata":{},"sourceType":"module"}