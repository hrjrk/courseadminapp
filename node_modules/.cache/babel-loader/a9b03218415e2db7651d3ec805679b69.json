{"ast":null,"code":"import _objectSpread from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/ManageCoursePage.js\";\nimport React, { useState, useEffect } from 'react';\nimport CourseForm from './CourseForm';\nimport courseStore from '../stores/courseStore';\nimport { toast } from 'react-toastify';\nimport * as courseActions from '../actions/courseActions';\n\nconst ManageCoursePage = props => {\n  const _useState = useState({\n    id: null,\n    slug: \"\",\n    title: \"\",\n    authorId: null,\n    category: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        course = _useState2[0],\n        setCourse = _useState2[1];\n\n  const _useState3 = useState(courseStore.getCourses()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        courses = _useState4[0],\n        setCourses = _useState4[1];\n\n  const _useState5 = useState({}),\n        _useState6 = _slicedToArray(_useState5, 2),\n        errors = _useState6[0],\n        setErrors = _useState6[1];\n\n  useEffect(() => {\n    debugger;\n    const slug = props.match.params.slug; // from path '/courses/:slug'\n\n    if (slug) {\n      setCourse(courseStore.getCourseBySlug(slug));\n    }\n  }, [props.match.params.slug]);\n\n  function handleChange(event) {\n    setCourse(_objectSpread({}, course, {\n      [event.target.name]: event.target.value\n    }));\n  }\n\n  function isFormValid() {\n    const _errors = {};\n    if (!course.title) _errors.title = \"Title is required\";\n    if (!course.authorId) _errors.authorId = \"authorId is required\";\n    if (!course.category) _errors.category = \"category is required\";\n    setErrors(_errors); //Form is valid if the _errors object has no properties.\n\n    return Object.keys(_errors).length === 0;\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    debugger;\n    if (!isFormValid()) return;\n    courseActions.saveCourse(course).then(() => {\n      props.history.push(\"/courses\");\n      toast.success('Course Saved.');\n    });\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, \"Manage Course\"), React.createElement(CourseForm, {\n    errors: errors,\n    course: course,\n    onChange: handleChange,\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }));\n};\n\nexport default ManageCoursePage;","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/ManageCoursePage.js"],"names":["React","useState","useEffect","CourseForm","courseStore","toast","courseActions","ManageCoursePage","props","id","slug","title","authorId","category","course","setCourse","getCourses","courses","setCourses","errors","setErrors","match","params","getCourseBySlug","handleChange","event","target","name","value","isFormValid","_errors","Object","keys","length","handleSubmit","preventDefault","saveCourse","then","history","push","success"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAO,KAAKC,aAAZ,MAA+B,0BAA/B;;AAGA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA,oBAEFP,QAAQ,CAAC;AACjCQ,IAAAA,EAAE,EAAE,IAD6B;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,EAH0B;AAIjCC,IAAAA,QAAQ,EAAE,IAJuB;AAKjCC,IAAAA,QAAQ,EAAE;AALuB,GAAD,CAFN;AAAA;AAAA,QAEvBC,MAFuB;AAAA,QAEfC,SAFe;;AAAA,qBAUAd,QAAQ,CAACG,WAAW,CAACY,UAAZ,EAAD,CAVR;AAAA;AAAA,QAUvBC,OAVuB;AAAA,QAUdC,UAVc;;AAAA,qBAYFjB,QAAQ,CAAC,EAAD,CAZN;AAAA;AAAA,QAYvBkB,MAZuB;AAAA,QAYfC,SAZe;;AAc9BlB,EAAAA,SAAS,CAAE,MAAM;AACb;AACA,UAAMQ,IAAI,GAAGF,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBZ,IAAhC,CAFa,CAEyB;;AACtC,QAAGA,IAAH,EAAQ;AACJK,MAAAA,SAAS,CAACX,WAAW,CAACmB,eAAZ,CAA4Bb,IAA5B,CAAD,CAAT;AACH;AACJ,GANQ,EAMP,CAACF,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBZ,IAApB,CANO,CAAT;;AAQA,WAASc,YAAT,CAAsBC,KAAtB,EAA6B;AACzBV,IAAAA,SAAS,mBAAKD,MAAL;AAAa,OAACW,KAAK,CAACC,MAAN,CAAaC,IAAd,GAAsBF,KAAK,CAACC,MAAN,CAAaE;AAAhD,OAAT;AACH;;AAED,WAASC,WAAT,GAAuB;AACnB,UAAMC,OAAO,GAAG,EAAhB;AAEA,QAAG,CAAChB,MAAM,CAACH,KAAX,EAAkBmB,OAAO,CAACnB,KAAR,GAAgB,mBAAhB;AAClB,QAAG,CAACG,MAAM,CAACF,QAAX,EAAqBkB,OAAO,CAAClB,QAAR,GAAmB,sBAAnB;AACrB,QAAG,CAACE,MAAM,CAACD,QAAX,EAAqBiB,OAAO,CAACjB,QAAR,GAAmB,sBAAnB;AAErBO,IAAAA,SAAS,CAACU,OAAD,CAAT,CAPmB,CASnB;;AACA,WAAOC,MAAM,CAACC,IAAP,CAAYF,OAAZ,EAAqBG,MAArB,KAAgC,CAAvC;AACH;;AAED,WAASC,YAAT,CAAsBT,KAAtB,EAA6B;AACzBA,IAAAA,KAAK,CAACU,cAAN;AACA;AACA,QAAG,CAACN,WAAW,EAAf,EAAmB;AACnBvB,IAAAA,aAAa,CAAC8B,UAAd,CAAyBtB,MAAzB,EAAiCuB,IAAjC,CACI,MAAM;AACF7B,MAAAA,KAAK,CAAC8B,OAAN,CAAcC,IAAd,CAAmB,UAAnB;AACAlC,MAAAA,KAAK,CAACmC,OAAN,CAAc,eAAd;AACH,KAJL;AAKH;;AAED,SACE,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI,oBAAC,UAAD;AACI,IAAA,MAAM,EAAErB,MADZ;AAEI,IAAA,MAAM,EAAEL,MAFZ;AAGI,IAAA,QAAQ,EAAEU,YAHd;AAII,IAAA,QAAQ,EAAEU,YAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,CADF;AAUH,CA5DD;;AA8DA,eAAe3B,gBAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport CourseForm from './CourseForm';\nimport courseStore from '../stores/courseStore';\nimport { toast } from 'react-toastify';\nimport * as courseActions from '../actions/courseActions';\n\n\nconst ManageCoursePage = props => {\n\n    const [course, setCourse] = useState({\n        id: null,\n        slug: \"\",\n        title: \"\",\n        authorId: null,\n        category: \"\"\n    });\n\n    const [courses, setCourses] = useState(courseStore.getCourses());\n\n    const [errors, setErrors] = useState({});\n\n    useEffect( () => {\n        debugger;\n        const slug = props.match.params.slug; // from path '/courses/:slug'\n        if(slug){\n            setCourse(courseStore.getCourseBySlug(slug));\n        }\n    },[props.match.params.slug]);\n    \n    function handleChange(event) {\n        setCourse({...course, [event.target.name] : event.target.value});\n    }\n\n    function isFormValid() {\n        const _errors = {};\n\n        if(!course.title) _errors.title = \"Title is required\";\n        if(!course.authorId) _errors.authorId = \"authorId is required\";\n        if(!course.category) _errors.category = \"category is required\";\n\n        setErrors(_errors);\n\n        //Form is valid if the _errors object has no properties.\n        return Object.keys(_errors).length === 0;\n    }\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        debugger;\n        if(!isFormValid()) return;\n        courseActions.saveCourse(course).then(\n            () => {\n                props.history.push(\"/courses\");\n                toast.success('Course Saved.');\n            });\n    }\n\n    return(\n      <>\n          <h2>Manage Course</h2>\n          <CourseForm\n              errors={errors}\n              course={course}\n              onChange={handleChange}\n              onSubmit={handleSubmit}/>\n      </>\n    );\n};\n\nexport default ManageCoursePage;"]},"metadata":{},"sourceType":"module"}