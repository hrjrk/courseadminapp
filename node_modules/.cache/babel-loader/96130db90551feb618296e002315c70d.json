{"ast":null,"code":"import dispatcher from \"../appDispatcher\";\nimport * as authorApi from \"../api/authorApi\";\nimport actionTypes from './actionTypes';\nimport * as courseApi from \"../api/courseApi\";\nimport { toast } from \"react-toastify\";\nexport function loadAuthors() {\n  debugger;\n  return authorApi.getAuthors().then(authors => {\n    //hey dispatcher go tell all stores thta course has been created.\n    dispatcher.dispatch({\n      actionType: actionTypes.LOAD_AUTHORS,\n      authors: authors // shorthand for this is   -->  courses\n\n    });\n  });\n}\nexport function deleteAuthor(id) {\n  return courseApi.deleteAuthor(id).then(() => {\n    dispatcher.dispatch({\n      actionType: actionTypes.DELETE_COURSE,\n      id: id\n    });\n    toast.success('Course Deleted.');\n  });\n}","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/actions/authorActions.js"],"names":["dispatcher","authorApi","actionTypes","courseApi","toast","loadAuthors","getAuthors","then","authors","dispatch","actionType","LOAD_AUTHORS","deleteAuthor","id","DELETE_COURSE","success"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAO,KAAKC,SAAZ,MAA2B,kBAA3B;AACA,SAAQC,KAAR,QAAoB,gBAApB;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC1B;AACA,SAAOJ,SAAS,CAACK,UAAV,GAAuBC,IAAvB,CAA4BC,OAAO,IAAI;AAC1C;AACAR,IAAAA,UAAU,CAACS,QAAX,CAAoB;AAChBC,MAAAA,UAAU,EAAGR,WAAW,CAACS,YADT;AAEhBH,MAAAA,OAAO,EAAEA,OAFO,CAEC;;AAFD,KAApB;AAIH,GANM,CAAP;AAOH;AAED,OAAO,SAASI,YAAT,CAAsBC,EAAtB,EAA0B;AAC7B,SAAOV,SAAS,CAACS,YAAV,CAAuBC,EAAvB,EAA2BN,IAA3B,CAAiC,MAAM;AAC1CP,IAAAA,UAAU,CAACS,QAAX,CAAoB;AAChBC,MAAAA,UAAU,EAAGR,WAAW,CAACY,aADT;AAEhBD,MAAAA,EAAE,EAAGA;AAFW,KAApB;AAIAT,IAAAA,KAAK,CAACW,OAAN,CAAc,iBAAd;AACH,GANM,CAAP;AAOH","sourcesContent":["import dispatcher from \"../appDispatcher\";\nimport * as authorApi from \"../api/authorApi\";\nimport actionTypes from './actionTypes';\nimport * as courseApi from \"../api/courseApi\";\nimport {toast} from \"react-toastify\";\n\nexport function loadAuthors() {\n    debugger;\n    return authorApi.getAuthors().then(authors => {\n        //hey dispatcher go tell all stores thta course has been created.\n        dispatcher.dispatch({\n            actionType : actionTypes.LOAD_AUTHORS,\n            authors: authors // shorthand for this is   -->  courses\n        });\n    });\n}\n\nexport function deleteAuthor(id) {\n    return courseApi.deleteAuthor(id).then( () => {\n        dispatcher.dispatch({\n            actionType : actionTypes.DELETE_COURSE,\n            id : id\n        });\n        toast.success('Course Deleted.');\n    });\n}\n"]},"metadata":{},"sourceType":"module"}