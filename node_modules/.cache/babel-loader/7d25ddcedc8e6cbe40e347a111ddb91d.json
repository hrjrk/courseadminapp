{"ast":null,"code":"import _slicedToArray from \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/AuthorsPage.js\";\nimport React, { useState, useEffect } from 'react';\nimport authorStore from '../stores/authorStore';\nimport courseStore from '../stores/courseStore';\nimport AuthorList from './AuthorList';\nimport { Link } from 'react-router-dom';\nimport { loadAuthors, deleteAuthor } from \"../actions/authorActions\";\nimport { loadCourses } from \"../actions/courseActions\";\n\nfunction AuthorsPage() {\n  const _useState = useState(authorStore.getAuthors()),\n        _useState2 = _slicedToArray(_useState, 2),\n        authors = _useState2[0],\n        setAuthors = _useState2[1];\n\n  const _useState3 = useState(courseStore.getCourses()),\n        _useState4 = _slicedToArray(_useState3, 2),\n        courses = _useState4[0],\n        setCourses = _useState4[1];\n\n  useEffect(() => {\n    authorStore.addChangeListener(onChange);\n\n    if (authorStore.getAuthors().length === 0) {\n      loadCourses();\n      loadAuthors();\n    }\n\n    return () => authorStore.removeChangeListener(onChange);\n  }, []);\n\n  function onChange() {\n    setCourses(courseStore.getCourses());\n    setAuthors(authorStore.getAuthors());\n  }\n\n  function isAuthorOnCourse(author) {\n    const course = courses.filter(course => {\n      course.authorId === author.id;\n    });\n    if (course === undefined) return false;\n    return true;\n  }\n\n  return React.createElement(React.Fragment, null, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Authors\"), React.createElement(Link, {\n    className: \"btn btn-primary\",\n    to: \"/author\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Add Author\"), React.createElement(AuthorList, {\n    authors: authors,\n    courses: courseStore.getCourses(),\n    deleteAuthor: deleteAuthor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n}\n\nexport default AuthorsPage;\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/","map":{"version":3,"sources":["/Users/hv055937/Library/MyWorkspace/myprojects/courseadminapp/src/components/AuthorsPage.js"],"names":["React","useState","useEffect","authorStore","courseStore","AuthorList","Link","loadAuthors","deleteAuthor","loadCourses","AuthorsPage","getAuthors","authors","setAuthors","getCourses","courses","setCourses","addChangeListener","onChange","length","removeChangeListener","isAuthorOnCourse","author","course","filter","authorId","id","undefined"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,WAAP,MAAwB,uBAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,0BAA1C;AACA,SAAQC,WAAR,QAA0B,0BAA1B;;AAEA,SAASC,WAAT,GAAuB;AAAA,oBAEWT,QAAQ,CAACE,WAAW,CAACQ,UAAZ,EAAD,CAFnB;AAAA;AAAA,QAEZC,OAFY;AAAA,QAEHC,UAFG;;AAAA,qBAGWZ,QAAQ,CAACG,WAAW,CAACU,UAAZ,EAAD,CAHnB;AAAA;AAAA,QAGZC,OAHY;AAAA,QAGHC,UAHG;;AAKnBd,EAAAA,SAAS,CAAC,MAAM;AACZC,IAAAA,WAAW,CAACc,iBAAZ,CAA8BC,QAA9B;;AACA,QAAGf,WAAW,CAACQ,UAAZ,GAAyBQ,MAAzB,KAAoC,CAAvC,EAA0C;AACtCV,MAAAA,WAAW;AACXF,MAAAA,WAAW;AACd;;AACD,WAAO,MAAMJ,WAAW,CAACiB,oBAAZ,CAAiCF,QAAjC,CAAb;AACH,GAPQ,EAON,EAPM,CAAT;;AASA,WAASA,QAAT,GAAoB;AAChBF,IAAAA,UAAU,CAACZ,WAAW,CAACU,UAAZ,EAAD,CAAV;AACAD,IAAAA,UAAU,CAACV,WAAW,CAACQ,UAAZ,EAAD,CAAV;AACH;;AAED,WAASU,gBAAT,CAA0BC,MAA1B,EAAkC;AAC/B,UAAMC,MAAM,GAAGR,OAAO,CAACS,MAAR,CAAgBD,MAAD,IAAY;AAACA,MAAAA,MAAM,CAACE,QAAP,KAAoBH,MAAM,CAACI,EAA3B;AAA8B,KAA1D,CAAf;AACA,QAAGH,MAAM,KAAKI,SAAd,EACI,OAAO,KAAP;AACJ,WAAO,IAAP;AACF;;AAED,SACI,0CACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,EAAE,EAAC,SAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAKI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEf,OAArB;AAA8B,IAAA,OAAO,EAAER,WAAW,CAACU,UAAZ,EAAvC;AAAiE,IAAA,YAAY,EAAEN,YAA/E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ;AAUH;;AAED,eAAeE,WAAf;AAEA","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport authorStore from '../stores/authorStore';\nimport courseStore from '../stores/courseStore';\nimport AuthorList from './AuthorList';\nimport { Link } from 'react-router-dom';\nimport { loadAuthors, deleteAuthor } from \"../actions/authorActions\";\nimport {loadCourses} from \"../actions/courseActions\";\n\nfunction AuthorsPage() {\n\n    const [authors, setAuthors] = useState(authorStore.getAuthors());\n    const [courses, setCourses] = useState(courseStore.getCourses());\n\n    useEffect(() => {\n        authorStore.addChangeListener(onChange);\n        if(authorStore.getAuthors().length === 0) {\n            loadCourses();\n            loadAuthors();\n        }\n        return () => authorStore.removeChangeListener(onChange);\n    }, []);\n\n    function onChange() {\n        setCourses(courseStore.getCourses());\n        setAuthors(authorStore.getAuthors());\n    }\n\n    function isAuthorOnCourse(author) {\n       const course = courses.filter((course) => {course.authorId === author.id});\n       if(course === undefined)\n           return false;\n       return true;\n    }\n\n    return(\n        <>\n            <h2>Authors</h2>\n            <Link className=\"btn btn-primary\" to=\"/author\">\n                Add Author\n            </Link>\n            <AuthorList authors={authors} courses={courseStore.getCourses()} deleteAuthor={deleteAuthor}/>\n        </>\n    );\n\n}\n\nexport default AuthorsPage;\n\n/*class component\nimport React from 'react';\nimport {getCourses} from '../api/courseApi';\n\nclass CoursesPage extends React.Component{\n\n    state = {\n     courses: []\n    };\n\n    componentDidMount() {\n        getCourses().then(courses => this.setState({ courses: courses}));\n    }\n\n    render(){\n        return( <>\n                <h2>Courses</h2>\n                <table className=\"table\">\n                <thead>\n                <tr>\n                    <th>Title</th>\n                    <th>Author ID</th>\n                    <th>Category</th>\n                </tr>\n                </thead>\n                <tbody>\n                {this.state.courses.map( course => {\n                    return <tr key={course.id}>\n                           <td>{course.title}</td>\n                           <td>{course.authorId}</td>\n                           <td>{course.category}</td>\n                    </tr>\n                })}\n                </tbody>\n                </table>\n                </>\n        );\n    }\n}\n\nexport default CoursesPage;\n*/"]},"metadata":{},"sourceType":"module"}